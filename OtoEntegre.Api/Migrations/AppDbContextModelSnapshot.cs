// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OtoEntegre.Api.Data;

#nullable disable

namespace OtoEntegre.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OtoEntegre.Api.Entities.Dealer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("lastname");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.ToTable("dealers", (string)null);
                });

            modelBuilder.Entity("OtoEntegre.Api.Entities.Entegrasyonlar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Api_Key")
                        .HasColumnType("text")
                        .HasColumnName("api_key");

                    b.Property<string>("Api_Secret")
                        .HasColumnType("text")
                        .HasColumnName("api_secret");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Extra_Config")
                        .HasColumnType("json")
                        .HasColumnName("extra_config");

                    b.Property<string>("Kullanici_Adi")
                        .HasColumnType("text")
                        .HasColumnName("kullanici_adi");

                    b.Property<Guid?>("Kullanici_Id")
                        .HasColumnType("uuid")
                        .HasColumnName("kullanici_id");

                    b.Property<Guid?>("Platform_Id")
                        .HasColumnType("uuid")
                        .HasColumnName("platform_id");

                    b.Property<int?>("Seller_Id")
                        .HasColumnType("integer")
                        .HasColumnName("seller_id");

                    b.Property<string>("Sifre")
                        .HasColumnType("text")
                        .HasColumnName("sifre");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Kullanici_Id");

                    b.HasIndex("Platform_Id");

                    b.ToTable("entegrasyonlar");
                });

            modelBuilder.Entity("OtoEntegre.Api.Entities.KULLANICILAR", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ad");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Entegrasyon_Telefon")
                        .HasColumnType("text")
                        .HasColumnName("entegrasyon_telefon");

                    b.Property<string>("Rol")
                        .HasColumnType("text")
                        .HasColumnName("rol");

                    b.Property<string>("Sifre_Hash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sifre_hash");

                    b.Property<int?>("Tedarik_Kullanici_Id")
                        .HasColumnType("integer")
                        .HasColumnName("tedarik_kullanici_id");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("telefon");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("kullanicilar", (string)null);
                });

            modelBuilder.Entity("OtoEntegre.Api.Entities.KullaniciRolleri", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("KullaniciId")
                        .HasColumnType("uuid")
                        .HasColumnName("kullanici_id");

                    b.Property<Guid?>("ROLLERId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RolId")
                        .HasColumnType("uuid")
                        .HasColumnName("rol_id");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("ROLLERId");

                    b.HasIndex("RolId");

                    b.ToTable("kullanici_rolleri", (string)null);
                });

            modelBuilder.Entity("OtoEntegre.Api.Entities.PLATFORMLAR", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ad");

                    b.Property<string>("Api_Url")
                        .HasColumnType("text")
                        .HasColumnName("api_url");

                    b.Property<DateTime?>("Created_At")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("Tip_Id")
                        .HasColumnType("uuid")
                        .HasColumnName("tip_id");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Tip_Id");

                    b.ToTable("platformlar");
                });

            modelBuilder.Entity("OtoEntegre.Api.Entities.PLATFORM_TURLERI", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ad");

                    b.HasKey("Id");

                    b.ToTable("platform_turleri");
                });

            modelBuilder.Entity("OtoEntegre.Api.Entities.ROLLER", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Aciklama")
                        .HasColumnType("text")
                        .HasColumnName("aciklama");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ad");

                    b.HasKey("Id");

                    b.ToTable("roller");
                });

            modelBuilder.Entity("OtoEntegre.Api.Entities.SiparisUrunleri", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("Adet")
                        .HasColumnType("integer")
                        .HasColumnName("adet");

                    b.Property<decimal>("Birim_Fiyat")
                        .HasColumnType("numeric")
                        .HasColumnName("birim_fiyat");

                    b.Property<Guid>("SiparisId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Siparis_Id")
                        .HasColumnType("uuid")
                        .HasColumnName("siparis_id");

                    b.Property<decimal>("Toplam_Fiyat")
                        .HasColumnType("numeric")
                        .HasColumnName("toplam_fiyat");

                    b.Property<Guid>("UrunId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Urun_Id")
                        .HasColumnType("uuid")
                        .HasColumnName("urun_id");

                    b.HasKey("Id");

                    b.HasIndex("SiparisId");

                    b.HasIndex("UrunId");

                    b.ToTable("siparis_urunleri");
                });

            modelBuilder.Entity("OtoEntegre.Api.Entities.Siparisler", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("DealerId")
                        .HasColumnType("integer")
                        .HasColumnName("dealer_id");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("durum");

                    b.Property<Guid?>("EntegrasyonId")
                        .HasColumnType("uuid")
                        .HasColumnName("entegrasyon_id");

                    b.Property<decimal>("KargoUcreti")
                        .HasColumnType("numeric")
                        .HasColumnName("kargo_ucreti");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("kod");

                    b.Property<Guid?>("KullaniciId")
                        .HasColumnType("uuid")
                        .HasColumnName("kullanici_id");

                    b.Property<string>("OdemeDurumu")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("odeme_durumu");

                    b.Property<string>("SiparisNumarasi")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("siparis_numarasi");

                    b.Property<int?>("TedarikKullaniciId")
                        .HasColumnType("integer")
                        .HasColumnName("tedarik_kullanici_id");

                    b.Property<bool>("TedarikSent")
                        .HasColumnType("boolean")
                        .HasColumnName("tedarik_sent");

                    b.Property<bool>("TelegramSent")
                        .HasColumnType("boolean")
                        .HasColumnName("telegram_sent");

                    b.Property<decimal>("ToplamTutar")
                        .HasColumnType("numeric")
                        .HasColumnName("toplam_tutar");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("DealerId");

                    b.HasIndex("EntegrasyonId");

                    b.ToTable("siparisler");
                });

            modelBuilder.Entity("OtoEntegre.Api.Entities.TedarikUrunler", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("barcode");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("brand");

                    b.Property<decimal>("BuyPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("buy_price");

                    b.Property<string>("Category1")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("category1");

                    b.Property<string>("Category2")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("category2");

                    b.Property<string>("Category3")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("category3");

                    b.Property<string>("Category4")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("category4");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("currency");

                    b.Property<DateTime>("LastSyncAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_sync_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("numeric")
                        .HasColumnName("sale_price");

                    b.Property<string>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<int>("TaxRate")
                        .HasColumnType("integer")
                        .HasColumnName("tax_rate");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("tedarik_urunler");
                });

            modelBuilder.Entity("OtoEntegre.Api.Entities.Urunler", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ad");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Kategori")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("kategori");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sku");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("UrunTedarikBarcode")
                        .HasColumnType("text")
                        .HasColumnName("urun_tedarik_barcode");

                    b.HasKey("Id");

                    b.ToTable("urunler");
                });

            modelBuilder.Entity("OtoEntegre.Api.Entities.Entegrasyonlar", b =>
                {
                    b.HasOne("OtoEntegre.Api.Entities.KULLANICILAR", "Kullanici")
                        .WithMany()
                        .HasForeignKey("Kullanici_Id");

                    b.HasOne("OtoEntegre.Api.Entities.PLATFORMLAR", "Platform")
                        .WithMany("Entegrasyonlar")
                        .HasForeignKey("Platform_Id");

                    b.Navigation("Kullanici");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("OtoEntegre.Api.Entities.KullaniciRolleri", b =>
                {
                    b.HasOne("OtoEntegre.Api.Entities.KULLANICILAR", "Kullanici")
                        .WithMany("Roller")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OtoEntegre.Api.Entities.ROLLER", null)
                        .WithMany("KullaniciRolleri")
                        .HasForeignKey("ROLLERId");

                    b.HasOne("OtoEntegre.Api.Entities.ROLLER", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("OtoEntegre.Api.Entities.PLATFORMLAR", b =>
                {
                    b.HasOne("OtoEntegre.Api.Entities.PLATFORM_TURLERI", "Tip")
                        .WithMany("Platformlar")
                        .HasForeignKey("Tip_Id");

                    b.Navigation("Tip");
                });

            modelBuilder.Entity("OtoEntegre.Api.Entities.SiparisUrunleri", b =>
                {
                    b.HasOne("OtoEntegre.Api.Entities.Siparisler", "Siparis")
                        .WithMany()
                        .HasForeignKey("SiparisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OtoEntegre.Api.Entities.Urunler", "Urun")
                        .WithMany("SiparisUrunleri")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Siparis");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("OtoEntegre.Api.Entities.Siparisler", b =>
                {
                    b.HasOne("OtoEntegre.Api.Entities.Dealer", "Dealer")
                        .WithMany("Siparisler")
                        .HasForeignKey("DealerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OtoEntegre.Api.Entities.Entegrasyonlar", "Entegrasyonlar")
                        .WithMany("Siparisler")
                        .HasForeignKey("EntegrasyonId");

                    b.Navigation("Dealer");

                    b.Navigation("Entegrasyonlar");
                });

            modelBuilder.Entity("OtoEntegre.Api.Entities.Dealer", b =>
                {
                    b.Navigation("Siparisler");
                });

            modelBuilder.Entity("OtoEntegre.Api.Entities.Entegrasyonlar", b =>
                {
                    b.Navigation("Siparisler");
                });

            modelBuilder.Entity("OtoEntegre.Api.Entities.KULLANICILAR", b =>
                {
                    b.Navigation("Roller");
                });

            modelBuilder.Entity("OtoEntegre.Api.Entities.PLATFORMLAR", b =>
                {
                    b.Navigation("Entegrasyonlar");
                });

            modelBuilder.Entity("OtoEntegre.Api.Entities.PLATFORM_TURLERI", b =>
                {
                    b.Navigation("Platformlar");
                });

            modelBuilder.Entity("OtoEntegre.Api.Entities.ROLLER", b =>
                {
                    b.Navigation("KullaniciRolleri");
                });

            modelBuilder.Entity("OtoEntegre.Api.Entities.Urunler", b =>
                {
                    b.Navigation("SiparisUrunleri");
                });
#pragma warning restore 612, 618
        }
    }
}
